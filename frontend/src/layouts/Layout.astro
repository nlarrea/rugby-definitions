---
import { getLangFromUrl } from '@/i18n/utils';
import { colors } from '@/constants/colors';
import Navbar from '@/components/views/Navbar.astro';
import Footer from '@/components/views/Footer.astro';

const {
	darkBg,
	darkText,
	darkAccent,
	lightBg,
	lightText,
	lightAccent,
	lightFooter,
} = colors;

interface Props {
	title: string;
	description: string;
}

const { title, description } = Astro.props;

const lang = getLangFromUrl(Astro.url);
---

<!doctype html>
<html lang={lang}>
	<head>
		<meta charset='UTF-8' />
		<meta name='description' content={description} />
		<meta name='viewport' content='width=device-width' />
		<link rel='icon' type='image/svg+xml' href='/favicon.svg' />
		<meta name='generator' content={Astro.generator} />
		<title>{title}</title>
		<link rel='preconnect' href='https://fonts.googleapis.com' />
		<link rel='preconnect' href='https://fonts.gstatic.com' crossorigin />
		<link
			href='https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@400&family=Poppins:wght@400;500&family=Tomorrow:wght@700&display=swap'
			rel='stylesheet'
		/>
	</head>
	<body>
		<Navbar />
		<main id='container'>
			<slot />
		</main>
		<Footer />
	</body>
</html>

<style
	is:global
	define:vars={{
		darkBg,
		darkText,
		darkAccent,
		lightBg,
		lightText,
		lightAccent,
		lightFooter,
	}}
>
	:root {
		--dark-bg: var(--darkBg);
		--dark-text: var(--darkText);
		--dark-accent: var(--darkAccent);
		--light-bg: var(--lightBg);
		--light-text: var(--lightText);
		--light-accent: var(--lightAccent);
		--light-footer: var(--lightFooter);
		--app-max-width: 700px;
		color-scheme: light dark;
		accent-color: light-dark(var(--light-accent), var(--dark-accent));
	}

	* {
		margin: 0;
		padding: 0;
		box-sizing: border-box;

		font-family: 'Poppins', system-ui, sans-serif;
	}

	h1,
	h2,
	h3,
	h4,
	h5,
	h6 {
		font-family: 'Tomorrow', serif;
		font-weight: bold;
	}

	html,
	body {
		width: 100%;
		min-height: 100svh;

		color: light-dark(var(--light-text), var(--dark-text));
		background-color: light-dark(var(--light-bg), var(--dark-bg));

		display: flex;
		flex-direction: column;
	}

	main#container {
		flex: 1 1 auto;

		display: flex;
		flex-direction: column;
		align-items: center;
	}
</style>
